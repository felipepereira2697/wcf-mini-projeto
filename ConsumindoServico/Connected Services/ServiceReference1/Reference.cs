//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsumindoServico.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jogador", Namespace="http://schemas.datacontract.org/2004/07/Jogadores")]
    [System.SerializableAttribute()]
    public partial class Jogador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IJogadorService")]
    public interface IJogadorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJogadorService/Adicionar", ReplyAction="http://tempuri.org/IJogadorService/AdicionarResponse")]
        void Adicionar(ConsumindoServico.ServiceReference1.Jogador j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJogadorService/Adicionar", ReplyAction="http://tempuri.org/IJogadorService/AdicionarResponse")]
        System.Threading.Tasks.Task AdicionarAsync(ConsumindoServico.ServiceReference1.Jogador j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJogadorService/Buscar", ReplyAction="http://tempuri.org/IJogadorService/BuscarResponse")]
        ConsumindoServico.ServiceReference1.Jogador Buscar(string nome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJogadorService/Buscar", ReplyAction="http://tempuri.org/IJogadorService/BuscarResponse")]
        System.Threading.Tasks.Task<ConsumindoServico.ServiceReference1.Jogador> BuscarAsync(string nome);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJogadorServiceChannel : ConsumindoServico.ServiceReference1.IJogadorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JogadorServiceClient : System.ServiceModel.ClientBase<ConsumindoServico.ServiceReference1.IJogadorService>, ConsumindoServico.ServiceReference1.IJogadorService {
        
        public JogadorServiceClient() {
        }
        
        public JogadorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JogadorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JogadorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JogadorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Adicionar(ConsumindoServico.ServiceReference1.Jogador j) {
            base.Channel.Adicionar(j);
        }
        
        public System.Threading.Tasks.Task AdicionarAsync(ConsumindoServico.ServiceReference1.Jogador j) {
            return base.Channel.AdicionarAsync(j);
        }
        
        public ConsumindoServico.ServiceReference1.Jogador Buscar(string nome) {
            return base.Channel.Buscar(nome);
        }
        
        public System.Threading.Tasks.Task<ConsumindoServico.ServiceReference1.Jogador> BuscarAsync(string nome) {
            return base.Channel.BuscarAsync(nome);
        }
    }
}
